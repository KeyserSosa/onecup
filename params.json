{"name":"Onecup","tagline":"Plain coffee script HTML templeting library. ","body":"# Onecup #\r\n\r\nOnecup uses coffee script's nifty function nesting trick to bring your kickass yet simple templeting library.\r\n\r\n```\r\nhtml ->\r\n  body ->\r\n    div ->\r\n      text \"get \"\r\n      a href:\"https://github.com/treeform/onecup\", -> \"OneCup\"\r\n      text \" here\"\r\n```\r\n\r\nOnecup makes several assumptions:\r\n\r\n + big chunks of the page going to be re-rendered at once.\r\n + there is a need for explicit whitespace control\r\n + HTML is more of an object code then markup\r\n\r\nOnecup excels at generating complex HTML in a few lines. It is just coffee script which is just javascript. It requires no compilation (apart from coffee script) and you can use all expressiveness and organization of coffee script anywhere in the templates.\r\n\r\n## Features ##\r\n\r\n### JQuery style selectors ###\r\nIf first argument to a template tag begins with a `#` or `.` it is treated as a *id* or *class*. It uses the JQuery selectors syntax. Example:\r\n\r\n```\r\ndiv \"#list-holder\" ->\r\n  ol \"#main-list.number-list\" ->\r\n    for i in [0..10]\r\n\tli \".number-iten\", \"nubmer {i}\"\r\n```\r\n\r\n### explicit text and whitespace ###\r\nText is explicit, yet you get explicit control over your whitespace. You also don't have to fight over whitespace minifiers, because everything produced is already minified.\r\n\r\n```\r\ndiv ->\r\n  text \"foo\"\r\ndiv ->\r\n  text \"foo\"\r\n```\r\n\r\nUsing `text` or leaving it on the same line is equivalent\r\n\r\n```\r\np \"look its the same thing\"\r\np ->\r\n    text \"look its the same thing\"\r\n```\r\n\r\n### raw text ###\r\n`text` escapes things by default so you might have to use `raw` if you want to inject html or other markup\r\n\r\n```\r\ndiv ->\r\n  raw markdown_html\r\n```\r\n\r\n### styles ###\r\nStyles can be passed directly using the `style` attribute. This is needed when generating some complex looking HTML such as graphs and other visualizations. Or to not clutter the css with layout code that is not reusable.\r\n\r\n```\r\ndiv style{\"z-index\":5*4}, \"z-index computation\"\r\ndiv style:{'background-color': \"red\"}, ->\r\n   text \"this text will be red\"\r\n```\r\n\r\n### html attributes ###\r\n\r\nSpecial HTML attributes can also be passed. `selected`, `disabled`, `checked`, `readonly`, and `multiple` are supported. They are surprisingly awkward in other templeting engines. \r\n\r\n```\r\ndiv ->\r\n  ol ->\r\n    for i in [0..10]\r\n      li ->\r\n        text \"nubmer {i}\"\r\n        input \r\n            type:check \r\n            checked:i==5\r\n```\r\n   \r\nyou can also define your own custom attributes\r\n\r\n```\r\ndiv data:\"1234\"\r\n```\r\n\r\n### just coffee script ###\r\n\r\nOnecup is 100% coffee script, so you can use functions, loops, if blocks, classes, and other coffee script constructs.\r\n\r\n### function ###\r\n\r\n```\r\n# define a common function\r\nbbox = (content) ->\r\n  div \".other-border\", ->\r\n    div \".inner-border\", ->\r\n\tdiv \".inner-layout\", ->\r\n\t   content()\r\n\r\nbbox ->\r\n  text \"this box has fancy border\"\r\n\r\nbbox ->\r\n  text \"so does this\"\r\n```\r\n\r\n### if blocks ###\r\n```\r\na = true\r\nif a \r\n    p \"a is true\"\r\nelse\r\n    p \"a is false\"\r\n```\r\n\r\n### loops ###\r\n\r\n```\r\ncolors = [\"red\", \"green\", \"blue\"]\r\nfor color in colors\r\n  div style:{'color': color}\r\n```\r\n\r\n## Use ##\r\n\r\nHow to use OneCup in your app:\r\n\r\n```\r\n# import tags into your namespace\r\n{render, div, span, table, thead, tbody, tr, td, th, text, textarea, button, hr, iframe,\r\n raw, a, br, b, img, label, form, input, ul, li, h1, h2, h4, select, option, p} = window.drykup\r\n\r\n# define a template namespace\r\n$t = {}\r\n\r\n# attach function to your template namespace\r\n$t.full_doc ->\r\n  body ->\r\n    p \"content here\"\r\n\r\n# anywhere in your code\r\nhtml = onecup.render($t.full_doc(template, args))\r\n# use JQuery (or some thing else) to insert it into html\r\n$(\"html\").html(html)\r\n\r\n```\r\n\r\n## Origin ##\r\n\r\nOnecup was originally fork of dryKup (https://github.com/mark-hahn/drykup) by Mark Hahn, which was a fork of CoffeeKup (https://github.com/mauricemach/coffeekup) by Maurice Machado. But now its a whole different thing!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}